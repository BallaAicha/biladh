package com.socgen.unibank.platform.springboot.config.jpa;

import liquibase.resource.ClassLoaderResourceAccessor;
import java.io.*;
import java.nio.charset.StandardCharsets;

public class AutoQuotingResourceAccessor extends ClassLoaderResourceAccessor {
    
    @Override
    public InputStream openStream(String relativeTo, String streamPath) throws IOException {
        // Récupérer le flux original
        InputStream originalStream = super.openStream(relativeTo, streamPath);
        
        // Vérifier si c'est un fichier de changelog à modifier
        if (isChangelogFile(streamPath)) {
            return modifyChangelogContent(originalStream, streamPath);
        }
        
        return originalStream;
    }
    
    /**
     * Vérifie si le fichier doit être modifié
     */
    private boolean isChangelogFile(String streamPath) {
        return streamPath != null && 
               streamPath.contains("changelog") && 
               streamPath.endsWith(".xml") &&
               !streamPath.contains("master"); // Optionnel : éviter de modifier le master
    }
    
    /**
     * Modifie le contenu du changelog pour ajouter objectQuotingStrategy
     */
    private InputStream modifyChangelogContent(InputStream originalStream, String streamPath) throws IOException {
        // Lire tout le contenu
        byte[] bytes = originalStream.readAllBytes();
        String content = new String(bytes, StandardCharsets.UTF_8);
        
        // Vérifier si le fichier contient databaseChangeLog et n'a pas déjà objectQuotingStrategy
        if (content.contains("<databaseChangeLog") && !content.contains("objectQuotingStrategy")) {
            
            // Ajouter objectQuotingStrategy="QUOTE_ALL_OBJECTS"
            content = content.replace(
                "<databaseChangeLog",
                "<databaseChangeLog objectQuotingStrategy=\"QUOTE_ALL_OBJECTS\""
            );
            
            // Log pour debug (vous pouvez commenter si pas nécessaire)
            System.out.println("✅ Added objectQuotingStrategy to: " + streamPath);
        }
        
        // Retourner le contenu modifié
        return new ByteArrayInputStream(content.getBytes(StandardCharsets.UTF_8));
    }
    
    @Override
    public ClassLoader getClassLoader() {
        return Thread.currentThread().getContextClassLoader();
    }
}
