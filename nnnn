import { useState, useEffect } from 'react';
import { ChevronRight, Home, Search, Globe, Code, Book, Terminal, Database, ArrowRight, ExternalLink } from 'lucide-react';
import { motion, AnimatePresence } from 'framer-motion';
import HeaderDoc from "../components/documentation/HeaderDoc.tsx";
import MobileMenu from "../components/documentation/MobileMenu.tsx";
import ServiceDocumentationContainer from "../components/documentation/ServiceDocumentationContainer.tsx";
import TrigrammeSelect from "../components/documentation/TrigrammeSelect.tsx";
import ServicesList from "../components/documentation/ServicesList.tsx";

import { APIService } from '../types/api';
import { useQueryClient } from '@tanstack/react-query';
import { useTrigrammes } from "../hooks/apis/useTrigrammes.ts";
import { useServicesByTrigramme } from "../hooks/apis/useServicesByTrigramme.ts";
import { useService } from "../hooks/apis/useService.ts";
import { Footer } from "../components/commons/Footer.tsx";

export function APIDocumentation() {
    const [selectedTrigramme, setSelectedTrigramme] = useState<string | null>(null);
    const [searchTerm, setSearchTerm] = useState('');
    const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
    const [selectedServiceId, setSelectedServiceId] = useState<string | null>(null);
    const [scrolled, setScrolled] = useState(false);

    // Fetch data using custom hooks
    const { data: trigrammes = [], isLoading: trigrammesLoading } = useTrigrammes();
    const { data: servicesForTrigramme = [], isLoading: servicesLoading } = useServicesByTrigramme(selectedTrigramme);
    const { data: selectedService, isLoading: serviceDetailLoading } = useService(selectedServiceId);

    const queryClient = useQueryClient();

    // Handle scroll effect
    useEffect(() => {
        const handleScroll = () => {
            setScrolled(window.scrollY > 20);
        };
        window.addEventListener('scroll', handleScroll);
        return () => window.removeEventListener('scroll', handleScroll);
    }, []);

    // Filter services by search term
    const filteredServices = servicesForTrigramme.filter(service => {
        const matchesSearch = service.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
            service.description.toLowerCase().includes(searchTerm.toLowerCase());
        return matchesSearch;
    });

    const toggleMobileMenu = () => {
        setMobileMenuOpen(!mobileMenuOpen);
    };

    const handleServiceSelection = (service: APIService) => {
        setSelectedServiceId(service.id);
        queryClient.prefetchQuery({
            queryKey: ['service', service.id],
            queryFn: () => service
        });
    };

    const resetSelection = () => {
        setSelectedServiceId(null);
        setSelectedTrigramme(null);
    };

    const backToTrigrammeList = () => {
        setSelectedServiceId(null);
        setSelectedTrigramme(null);
    };

    const backToServicesList = () => {
        setSelectedServiceId(null);
    };

    const LoadingSpinner = () => (
        <div className="flex flex-col items-center justify-center py-10">
            <div className="animate-spin rounded-full h-12 w-12 border-4 border-primary-200 border-t-primary-600"></div>
            <p className="mt-4 text-primary-600 font-medium">Chargement en cours...</p>
        </div>
    );

    const QuickActionCard = ({ icon: Icon, title, description, onClick }: any) => (
        <motion.button
            onClick={onClick}
            className="group relative overflow-hidden bg-white p-6 rounded-2xl border border-neutral-200 hover:border-primary-300 transition-all duration-300"
            whileHover={{ y: -5, scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
        >
            <div className="relative z-10">
                <div className="mb-4 inline-flex p-3 bg-gradient-to-br from-primary-50 to-primary-100 rounded-xl">
                    <Icon className="h-6 w-6 text-primary-600" />
                </div>
                <h3 className="text-lg font-semibold text-neutral-900 mb-2">{title}</h3>
                <p className="text-sm text-neutral-600">{description}</p>
                <div className="mt-4 inline-flex items-center text-primary-600 text-sm font-medium">
                    En savoir plus
                    <ArrowRight className="ml-2 h-4 w-4 transition-transform group-hover:translate-x-1" />
                </div>
            </div>
            <div className="absolute inset-0 bg-gradient-to-br from-primary-50/0 to-primary-100/0 group-hover:from-primary-50/50 group-hover:to-primary-100/50 transition-all duration-500" />
        </motion.button>
    );

    return (
        <div className="min-h-screen bg-gradient-to-br from-neutral-50 to-neutral-100">
            {/* Header avec effet de scroll */}
            <motion.div
                className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
                    scrolled ? 'bg-white/80 backdrop-blur-lg shadow-lg' : ''
                }`}
            >
                <HeaderDoc resetSelection={resetSelection} toggleMobileMenu={toggleMobileMenu} />
            </motion.div>

            <MobileMenu
                mobileMenuOpen={mobileMenuOpen}
                toggleMobileMenu={toggleMobileMenu}
                searchTerm={searchTerm}
                setSearchTerm={setSearchTerm}
                selectedTrigramme={selectedTrigramme}
                setSelectedTrigramme={setSelectedTrigramme}
                selectedService={selectedService || null}
                setSelectedService={handleServiceSelection}
                trigrammes={trigrammes}
                filteredServices={filteredServices}
            />

            <main className="pt-20">
                <AnimatePresence mode="wait">
                    <motion.div
                        key={selectedServiceId ? 'service' : (selectedTrigramme ? 'trigramme' : 'home')}
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        exit={{ opacity: 0, y: -20 }}
                        transition={{ duration: 0.3 }}
                        className="container mx-auto px-4 py-8"
                    >
                        {selectedService ? (
                            // Vue détaillée du service
                            <div className="max-w-7xl mx-auto">
                                <motion.nav
                                    initial={{ opacity: 0, y: 5 }}
                                    animate={{ opacity: 1, y: 0 }}
                                    className="mb-8 flex items-center space-x-2 text-sm bg-white/50 backdrop-blur-lg p-4 rounded-2xl border border-neutral-200/50"
                                >
                                    <motion.button
                                        whileHover={{ scale: 1.1, rotate: -5 }}
                                        whileTap={{ scale: 0.9 }}
                                        onClick={backToTrigrammeList}
                                        className="text-primary-500 hover:text-primary-700"
                                    >
                                        <Home className="h-5 w-5" />
                                    </motion.button>
                                    <ChevronRight className="h-4 w-4 text-neutral-400" />
                                    <motion.span
                                        whileHover={{ scale: 1.05 }}
                                        className="text-primary-500 hover:text-primary-700 cursor-pointer font-medium"
                                        onClick={backToServicesList}
                                    >
                                        {selectedService.trigramme}
                                    </motion.span>
                                    <ChevronRight className="h-4 w-4 text-neutral-400" />
                                    <span className="font-medium text-secondary-900">{selectedService.name}</span>
                                </motion.nav>

                                {serviceDetailLoading ? (
                                    <LoadingSpinner />
                                ) : (
                                    <ServiceDocumentationContainer service={selectedService} />
                                )}
                            </div>
                        ) : selectedTrigramme ? (
                            // Vue liste des services
                            <div className="max-w-7xl mx-auto">
                                <motion.div
                                    initial={{ opacity: 0, y: 5 }}
                                    animate={{ opacity: 1, y: 0 }}
                                    className="flex flex-col md:flex-row md:items-center md:justify-between gap-6 mb-12"
                                >
                                    <div>
                                        <nav className="flex items-center space-x-2 text-sm mb-4">
                                            <motion.button
                                                whileHover={{ scale: 1.1 }}
                                                whileTap={{ scale: 0.9 }}
                                                onClick={backToTrigrammeList}
                                                className="text-primary-500 hover:text-primary-700"
                                            >
                                                <Home className="h-5 w-5" />
                                            </motion.button>
                                            <ChevronRight className="h-4 w-4 text-neutral-400" />
                                            <span className="font-medium text-secondary-900">{selectedTrigramme}</span>
                                        </nav>
                                        <h1 className="text-4xl font-bold text-secondary-900">
                                            Services <span className="bg-clip-text text-transparent bg-gradient-to-r from-primary-600 to-primary-700">{selectedTrigramme}</span>
                                        </h1>
                                        <p className="mt-2 text-neutral-600">
                                            Explorez les services disponibles pour le trigramme {selectedTrigramme}
                                        </p>
                                    </div>

                                    <div className="w-full md:w-96">
                                        <motion.div
                                            className="relative"
                                            whileHover={{ scale: 1.02 }}
                                            whileFocus={{ scale: 1.02 }}
                                        >
                                            <div className="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                                                <Search className="h-5 w-5 text-primary-500" />
                                            </div>
                                            <input
                                                type="text"
                                                placeholder="Rechercher un service..."
                                                className="w-full pl-12 pr-4 py-4 bg-white/80 backdrop-blur-lg border border-neutral-200 rounded-2xl focus:ring-primary-500 focus:border-primary-500 shadow-lg"
                                                value={searchTerm}
                                                onChange={(e) => setSearchTerm(e.target.value)}
                                            />
                                        </motion.div>
                                    </div>
                                </motion.div>

                                {servicesLoading ? (
                                    <LoadingSpinner />
                                ) : (
                                    <ServicesList
                                        services={filteredServices}
                                        selectedService={selectedService ?? null}
                                        onSelectService={handleServiceSelection}
                                    />
                                )}
                            </div>
                        ) : (
                            // Vue d'accueil
                            <div className="max-w-7xl mx-auto">
                                <div className="text-center mb-16">
                                    <motion.div
                                        initial={{ opacity: 0, scale: 0.5 }}
                                        animate={{ opacity: 1, scale: 1 }}
                                        transition={{ duration: 0.5 }}
                                        className="inline-flex items-center justify-center p-3 bg-gradient-to-br from-primary-100 to-primary-200 rounded-full mb-8 shadow-lg"
                                    >
                                        <div className="bg-gradient-to-r from-primary-600 to-primary-800 rounded-full p-3 shadow-inner">
                                            <Code className="h-8 w-8 text-white" />
                                        </div>
                                    </motion.div>

                                    <motion.h1
                                        initial={{ opacity: 0, y: 20 }}
                                        animate={{ opacity: 1, y: 0 }}
                                        transition={{ delay: 0.2 }}
                                        className="text-6xl font-bold text-secondary-900 mb-6 tracking-tight"
                                    >
                                        Documentation API <span className="bg-clip-text text-transparent bg-gradient-to-r from-primary-600 to-primary-700">SGABS</span>
                                    </motion.h1>

                                    <motion.p
                                        initial={{ opacity: 0, y: 20 }}
                                        animate={{ opacity: 1, y: 0 }}
                                        transition={{ delay: 0.3 }}
                                        className="text-xl text-neutral-600 max-w-3xl mx-auto leading-relaxed"
                                    >
                                        Découvrez notre catalogue complet d'APIs et accédez à une documentation détaillée
                                        pour intégrer nos services dans vos applications.
                                    </motion.p>

                                    <motion.div
                                        initial={{ opacity: 0, y: 20 }}
                                        animate={{ opacity: 1, y: 0 }}
                                        transition={{ delay: 0.4 }}
                                        className="mt-12 flex flex-col items-center"
                                    >
                                        <div className="w-full max-w-xl">
                                            {trigrammesLoading ? (
                                                <LoadingSpinner />
                                            ) : (
                                                <TrigrammeSelect
                                                    trigrammes={trigrammes}
                                                    selectedTrigramme={selectedTrigramme}
                                                    setSelectedTrigramme={setSelectedTrigramme}
                                                    isLoading={servicesLoading}
                                                />
                                            )}
                                        </div>
                                    </motion.div>
                                </div>

                                {/* Section des actions rapides */}
                                <motion.div
                                    initial={{ opacity: 0, y: 30 }}
                                    animate={{ opacity: 1, y: 0 }}
                                    transition={{ delay: 0.5 }}
                                    className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-16"
                                >
                                    <QuickActionCard
                                        icon={Book}
                                        title="Guide de démarrage"
                                        description="Apprenez les bases de l'utilisation de nos APIs avec notre guide complet."
                                        onClick={() => {}}
                                    />
                                    <QuickActionCard
                                        icon={Terminal}
                                        title="Console API"
                                        description="Testez nos APIs directement depuis votre navigateur."
                                        onClick={() => {}}
                                    />
                                    <QuickActionCard
                                        icon={Database}
                                        title="Exemples de code"
                                        description="Découvrez des exemples d'intégration dans différents langages."
                                        onClick={() => {}}
                                    />
                                </motion.div>

                                {/* Section d'information */}
                                <motion.section
                                    initial={{ opacity: 0, y: 30 }}
                                    animate={{ opacity: 1, y: 0 }}
                                    transition={{ delay: 0.6 }}
                                    className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-16"
                                >
                                    <motion.div
                                        whileHover={{ y: -5 }}
                                        className="bg-gradient-to-br from-white to-neutral-50 rounded-2xl shadow-lg p-8 border border-neutral-100"
                                    >
                                        <div className="flex items-start gap-6">
                                            <div className="bg-gradient-to-br from-primary-100 to-primary-200 rounded-xl p-4 shadow-md">
                                                <Globe className="h-8 w-8 text-primary-600" />
                                            </div>
                                            <div>
                                                <h2 className="text-2xl font-bold text-secondary-900 mb-4">Standards API SGABS</h2>
                                                <p className="text-neutral-600 mb-6">
                                                    Nos APIs suivent les meilleures pratiques REST et sont conçues pour être
                                                    facilement intégrables dans vos applications.
                                                </p>
                                                <motion.a
                                                    href="#"
                                                    whileHover={{ x: 5 }}
                                                    className="inline-flex items-center text-primary-600 font-medium hover:text-primary-700"
                                                >
                                                    Consulter les standards
                                                    <ExternalLink className="ml-2 h-4 w-4" />
                                                </motion.a>
                                            </div>
                                        </div>
                                    </motion.div>

                                    <motion.div
                                        whileHover={{ y: -5 }}
                                        className="bg-gradient-to-br from-white to-neutral-50 rounded-2xl shadow-lg p-8 border border-neutral-100"
                                    >
                                        <div className="flex items-start gap-6">
                                            <div className="bg-gradient-to-br from-primary-100 to-primary-200 rounded-xl p-4 shadow-md">
                                                <Terminal className="h-8 w-8 text-primary-600" />
                                            </div>
                                            <div>
                                                <h2 className="text-2xl font-bold text-secondary-900 mb-4">Support Développeur</h2>
                                                <p className="text-neutral-600 mb-6">
                                                    Besoin d'aide ? Notre équipe de support technique est là pour vous aider
                                                    dans l'intégration de nos APIs.
                                                </p>
                                                <motion.a
                                                    href="#"
                                                    whileHover={{ x: 5 }}
                                                    className="inline-flex items-center text-primary-600 font-medium hover:text-primary-700"
                                                >
                                                    Contacter le support
                                                    <ExternalLink className="ml-2 h-4 w-4" />
                                                </motion.a>
                                            </div>
                                        </div>
                                    </motion.div>
                                </motion.section>
                            </div>
                        )}
                    </motion.div>
                </AnimatePresence>
            </main>

            <Footer />
        </div>
    );
}

export default APIDocumentation;
