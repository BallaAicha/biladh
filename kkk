import React from 'react';
import { motion } from 'framer-motion';
import {
    GitBranch,
    Github,
    Box,
    Server,
    CheckCircle,
    XCircle,
    Code,
    FileCheck,
    AlertCircle
} from 'lucide-react';
import { APIService } from '../../../types/api';

interface ServiceTechnicalDetailsProps {
    service: APIService;
}

const StatusBadge: React.FC<{ value: boolean; label: string }> = ({ value, label }) => (
    <div className={`
        flex items-center justify-between p-3 rounded-lg border
        ${value ? 'bg-green-50 border-green-200' : 'bg-red-50 border-red-200'}
    `}>
        <span className="text-sm font-medium">{label}</span>
        {value ? (
            <CheckCircle className="w-5 h-5 text-green-600" />
        ) : (
            <XCircle className="w-5 h-5 text-red-600" />
        )}
    </div>
);

const ServiceTechnicalDetails: React.FC<ServiceTechnicalDetailsProps> = ({ service }) => {
    return (
        <motion.div
            className="bg-white rounded-xl border border-neutral-200 overflow-hidden"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
        >
            <div className="border-b border-neutral-200 bg-neutral-50 px-6 py-4">
                <h2 className="text-lg font-semibold text-neutral-800">Détails Techniques</h2>
            </div>

            <div className="p-6 space-y-6">
                {/* GitHub et Version */}
                <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-4">
                        <Github className="w-5 h-5 text-neutral-700" />
                        <a
                            href={service.githubUrl}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-primary-600 hover:text-primary-700 font-medium"
                        >
                            Voir sur GitHub
                        </a>
                    </div>
                    <div className="flex items-center space-x-2">
                        <Box className="w-4 h-4 text-violet-600" />
                        <span className="text-sm font-medium">Spring {service.springVersion}</span>
                    </div>
                </div>

                {/* Statuts */}
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div className="space-y-4">
                        <h3 className="text-sm font-semibold text-neutral-600 flex items-center">
                            <Server className="w-4 h-4 mr-2" />
                            Environnements
                        </h3>
                        <div className="space-y-3">
                            <StatusBadge value={service.deployedOnDev} label="Déployé en DEV" />
                            <StatusBadge value={service.migrationTestedOnDev} label="Migration testée en DEV" />
                            <StatusBadge value={service.publishedOnSkies} label="Publié sur Skies" />
                        </div>
                    </div>

                    <div className="space-y-4">
                        <h3 className="text-sm font-semibold text-neutral-600 flex items-center">
                            <Code className="w-4 h-4 mr-2" />
                            État Technique
                        </h3>
                        <div className="space-y-3">
                            <StatusBadge value={service.java17Migrated} label="Migration Java 17" />
                            <StatusBadge value={service.jfrogMigrated} label="Migration JFrog" />
                            <StatusBadge value={service.sonarized} label="Sonarisation" />
                        </div>
                    </div>
                </div>

                {/* Bridge Communication */}
                {service.bridgeCommunication && (
                    <div className="p-4 bg-blue-50 rounded-lg border border-blue-200">
                        <div className="flex items-start space-x-3">
                            <GitBranch className="w-5 h-5 text-blue-600 mt-0.5" />
                            <div>
                                <h4 className="font-medium text-blue-900">Communication Bridge</h4>
                                <p className="text-sm text-blue-700 mt-1">
                                    Bridge utilisé: {service.bridgeName || 'Non spécifié'}
                                </p>
                            </div>
                        </div>
                    </div>
                )}

                {/* Documentation Status */}
                <div className="p-4 rounded-lg border border-neutral-200 bg-neutral-50">
                    <div className="flex items-start space-x-3">
                        <FileCheck className="w-5 h-5 text-neutral-700 mt-0.5" />
                        <div className="flex-1">
                            <div className="flex items-center justify-between">
                                <h4 className="font-medium text-neutral-900">Documentation</h4>
                                <span className={`px-2 py-1 rounded text-xs font-medium ${
                                    service.isDocumented
                                        ? 'bg-green-100 text-green-700'
                                        : 'bg-red-100 text-red-700'
                                }`}>
                                    {service.isDocumented ? 'Documenté' : 'Non documenté'}
                                </span>
                            </div>
                            {service.documentedBy && (
                                <p className="text-sm text-neutral-600 mt-1">
                                    Documenté par: {service.documentedBy}
                                </p>
                            )}
                        </div>
                    </div>
                </div>

                {/* Criticality Info */}
                <div className="p-4 rounded-lg border border-neutral-200">
                    <div className="flex items-start space-x-3">
                        <AlertCircle className="w-5 h-5 text-neutral-700 mt-0.5" />
                        <div>
                            <h4 className="font-medium text-neutral-900">Criticité</h4>
                            <p className="text-sm text-neutral-600 mt-1">
                                Niveau: <span className="font-medium">{service.criticality}</span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </motion.div>
    );
};

export default ServiceTechnicalDetails;


---------------------------------------



import React from 'react';
import { motion } from 'framer-motion';
import { APIService } from '../../types/api';
import ServiceHeader from "./container/ServiceHeader";
import ServiceClients from "./container/ServiceClients";
import ServiceDataSources from './container/ServiceDataSources';
import ServiceInfrastructure from "./container/ServiceInfrastructure";
import ServiceDependencies from "./container/ServiceDependencies";
import ServiceEndpoints from "./container/ServiceEndpoints";
import ServiceDatabaseSchema from "./container/ServiceDatabaseSchema";
import ServiceTechnicalDetails from "./container/ServiceTechnicalDetails";

interface ServiceDocumentationContainerProps {
    service: APIService;
}

export function ServiceDocumentationContainer({ service }: ServiceDocumentationContainerProps) {
    return (
        <motion.div
            className="space-y-8"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
        >
            <ServiceHeader service={service} />
            <ServiceTechnicalDetails service={service} />
            <ServiceInfrastructure infrastructure={service.infrastructure} />
            <ServiceClients clients={service.clientConsumers} />
            <ServiceDataSources dataSources={service.dataSources} />
            <ServiceDependencies consumes={service.consumes} consumedBy={service.consumedBy} />
            <ServiceEndpoints endpoints={service.endpoints} />
            {service.databaseSchema && <ServiceDatabaseSchema schemaUrl={service.databaseSchema} />}
        </motion.div>
    );
}

export default ServiceDocumentationContainer;