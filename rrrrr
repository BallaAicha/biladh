import React from 'react';
import { motion } from 'framer-motion';
import { APIService } from '../../../types/api';
import { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip } from 'recharts';
import { Server, GitBranch, Hash } from 'lucide-react';

interface APIStatisticsProps {
    services: APIService[];
}

const APIStatistics: React.FC<APIStatisticsProps> = ({ services }) => {
    // Calculer les statistiques
    const totalApis = services.length;
    const productionApis = services.filter(s => s.developmentStatus === 'Production').length;
    const inProgressApis = services.filter(s => s.developmentStatus === 'inProgress').length;

    // Données pour le graphique de statut
    const statusData = [
        { name: 'Production', value: productionApis },
        { name: 'En développement', value: inProgressApis }
    ];

    // Grouper par trigramme
    const trigrammeStats = services.reduce((acc, service) => {
        acc[service.trigramme] = (acc[service.trigramme] || 0) + 1;
        return acc;
    }, {} as Record<string, number>);

    const trigrammeData = Object.entries(trigrammeStats).map(([name, value]) => ({
        name,
        value
    }));

    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];

    return (
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {/* Statistiques générales */}
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                className="bg-white rounded-xl shadow-sm border border-neutral-200 p-6"
            >
                <h2 className="text-xl font-semibold text-neutral-800 mb-6">Vue d'ensemble</h2>
                <div className="grid grid-cols-3 gap-4">
                    <div className="p-4 bg-blue-50 rounded-lg border border-blue-100">
                        <div className="flex items-center gap-3 mb-2">
                            <Server className="w-5 h-5 text-blue-600" />
                            <span className="text-blue-600 font-medium">Total APIs</span>
                        </div>
                        <p className="text-2xl font-bold text-blue-700">{totalApis}</p>
                    </div>
                    <div className="p-4 bg-green-50 rounded-lg border border-green-100">
                        <div className="flex items-center gap-3 mb-2">
                            <GitBranch className="w-5 h-5 text-green-600" />
                            <span className="text-green-600 font-medium">Production</span>
                        </div>
                        <p className="text-2xl font-bold text-green-700">{productionApis}</p>
                    </div>
                    <div className="p-4 bg-orange-50 rounded-lg border border-orange-100">
                        <div className="flex items-center gap-3 mb-2">
                            <Hash className="w-5 h-5 text-orange-600" />
                            <span className="text-orange-600 font-medium">Trigrammes</span>
                        </div>
                        <p className="text-2xl font-bold text-orange-700">{Object.keys(trigrammeStats).length}</p>
                    </div>
                </div>
            </motion.div>

            {/* Graphique Status */}
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.1 }}
                className="bg-white rounded-xl shadow-sm border border-neutral-200 p-6"
            >
                <h2 className="text-xl font-semibold text-neutral-800 mb-6">Status des APIs</h2>
                <div className="h-[300px]">
                    <ResponsiveContainer width="100%" height="100%">
                        <PieChart>
                            <Pie
                                data={statusData}
                                cx="50%"
                                cy="50%"
                                innerRadius={60}
                                outerRadius={80}
                                fill="#8884d8"
                                paddingAngle={5}
                                dataKey="value"
                                label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}
                            >
                                {statusData.map((entry, index) => (
                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                                ))}
                            </Pie>
                            <Tooltip />
                            <Legend />
                        </PieChart>
                    </ResponsiveContainer>
                </div>
            </motion.div>

            {/* Graphique Trigrammes */}
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.2 }}
                className="bg-white rounded-xl shadow-sm border border-neutral-200 p-6 lg:col-span-2"
            >
                <h2 className="text-xl font-semibold text-neutral-800 mb-6">Distribution par Trigramme</h2>
                <div className="h-[300px]">
                    <ResponsiveContainer width="100%" height="100%">
                        <PieChart>
                            <Pie
                                data={trigrammeData}
                                cx="50%"
                                cy="50%"
                                innerRadius={60}
                                outerRadius={80}
                                fill="#8884d8"
                                paddingAngle={5}
                                dataKey="value"
                                label={({ name, value }) => `${name}: ${value} API(s)`}
                            >
                                {trigrammeData.map((entry, index) => (
                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                                ))}
                            </Pie>
                            <Tooltip />
                            <Legend />
                        </PieChart>
                    </ResponsiveContainer>
                </div>
            </motion.div>
        </div>
    );
};

export default APIStatistics;





------------------------
import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { APIService } from '../../types/api';
import APIStatistics from '../components/dashboard/APIStatistics';
import ServicesList from '../components/ServicesList';
import { Search, Filter } from 'lucide-react';

interface APIDashboardProps {
    services: APIService[];
}

const APIDashboard: React.FC<APIDashboardProps> = ({ services }) => {
    const [searchTerm, setSearchTerm] = useState('');
    const [selectedTrigramme, setSelectedTrigramme] = useState<string>('');
    const [selectedStatus, setSelectedStatus] = useState<string>('');

    // Get unique trigrammes
    const trigrammes = Array.from(new Set(services.map(s => s.trigramme))).sort();

    // Filter services
    const filteredServices = services.filter(service => {
        const matchesSearch = service.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
            service.trigramme.toLowerCase().includes(searchTerm.toLowerCase()) ||
            service.description?.toLowerCase().includes(searchTerm.toLowerCase());

        const matchesTrigramme = !selectedTrigramme || service.trigramme === selectedTrigramme;
        const matchesStatus = !selectedStatus || service.developmentStatus === selectedStatus;

        return matchesSearch && matchesTrigramme && matchesStatus;
    });

    return (
        <div className="container mx-auto px-4 py-8 space-y-8">
            {/* En-tête */}
            <motion.div
                initial={{ opacity: 0, y: -20 }}
                animate={{ opacity: 1, y: 0 }}
                className="flex flex-col gap-4"
            >
                <h1 className="text-3xl font-bold text-neutral-900">Dashboard APIs</h1>
                <p className="text-neutral-600">
                    Vue d'ensemble et gestion des APIs de la plateforme
                </p>
            </motion.div>

            {/* Statistiques */}
            <APIStatistics services={services} />

            {/* Filtres et Recherche */}
            <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.3 }}
                className="bg-white rounded-xl shadow-sm border border-neutral-200 p-6"
            >
                <div className="flex flex-col md:flex-row gap-4">
                    {/* Barre de recherche */}
                    <div className="flex-1">
                        <div className="relative">
                            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400 w-5 h-5" />
                            <input
                                type="text"
                                placeholder="Rechercher une API..."
                                value={searchTerm}
                                onChange={(e) => setSearchTerm(e.target.value)}
                                className="w-full pl-10 pr-4 py-2 border border-neutral-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                            />
                        </div>
                    </div>

                    {/* Filtres */}
                    <div className="flex gap-4">
                        <select
                            value={selectedTrigramme}
                            onChange={(e) => setSelectedTrigramme(e.target.value)}
                            className="px-4 py-2 border border-neutral-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                        >
                            <option value="">Tous les trigrammes</option>
                            {trigrammes.map(trigramme => (
                                <option key={trigramme} value={trigramme}>{trigramme}</option>
                            ))}
                        </select>

                        <select
                            value={selectedStatus}
                            onChange={(e) => setSelectedStatus(e.target.value)}
                            className="px-4 py-2 border border-neutral-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                        >
                            <option value="">Tous les statuts</option>
                            <option value="Production">Production</option>
                            <option value="inProgress">En développement</option>
                        </select>
                    </div>
                </div>
            </motion.div>

            {/* Liste des APIs */}
            <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.4 }}
            >
                <ServicesList
                    services={filteredServices}
                    selectedService={null}
                    onSelectService={() => {}}
                />
            </motion.div>
        </div>
    );
};

export default APIDashboard;


---------------
Home :


import React from 'react';
import { motion } from 'framer-motion';
import { Code } from 'lucide-react';
import { useNavigate } from 'react-router-dom';

const Home: React.FC = () => {
    const navigate = useNavigate();

    return (
        <div className="min-h-screen bg-gradient-to-br from-primary-900 to-primary-800 flex items-center justify-center">
            <div className="text-center space-y-8">
                <motion.h1
                    initial={{ opacity: 0, y: -20 }}
                    animate={{ opacity: 1, y: 0 }}
                    className="text-4xl md:text-6xl font-bold text-white"
                >
                    Documentation Manager
                </motion.h1>

                <motion.p
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    transition={{ delay: 0.2 }}
                    className="text-xl text-white/80"
                >
                    Gérez et documentez vos APIs en toute simplicité
                </motion.p>

                <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: 0.4 }}
                    className="flex flex-col sm:flex-row items-center justify-center gap-4"
                >
                    <motion.button
                        whileHover={{ scale: 1.03 }}
                        whileTap={{ scale: 0.98 }}
                        className="bg-white/10 hover:bg-white/20 backdrop-blur-sm text-white px-5 py-2.5 rounded-lg font-medium flex items-center gap-2 border border-white/20"
                        onClick={() => navigate('/dashboard')}
                    >
                        <Code size={18} />
                        Voir les APIs
                    </motion.button>
                </motion.div>
            </div>
        </div>
    );
};

export default Home;




------import APIDashboard from './pages/APIDashboard';

      // Dans vos routes
      <Route path="/dashboard" element={<APIDashboard services={services} />} />

