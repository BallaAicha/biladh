 {/* Header Section with Name, Trigramme, and GitHub */}
            <div className="p-5 bg-gradient-to-r from-neutral-50 to-neutral-100 border-b border-neutral-200">
              <div className="flex justify-between items-start">
                <div>
                  <h2 className="font-bold text-2xl text-neutral-900 group-hover:text-primary-700 transition-colors mb-2">
                    {service.name}
                  </h2>
                  <span className="px-3 py-1 bg-neutral-100 text-neutral-800 rounded-full text-sm font-medium tracking-wide inline-block">
                    {service.trigramme}
                  </span>
                </div>
                
                {service.githubUrl && (
                  <a
                    href={service.githubUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="inline-flex items-center text-neutral-500 hover:text-primary-600 bg-white p-2 rounded-full shadow-sm hover:shadow transition-all"
                    title="View on GitHub"
                  >
                    {/* GitHub icon placeholder - replace with actual icon component */}
                    <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                      <path fillRule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clipRule="evenodd" />
                    </svg>
                  </a>
                )}
              </div>
            </div>
            
            {/* Main Content */}
            <div className="p-5 flex-grow">
              {/* Status Badges Section */}
              <div className="flex flex-wrap gap-2 mb-4">
                {service.criticalityData && (
                  <span className={`inline-flex items-center px-3 py-1.5 rounded-full text-xs font-medium ${service.criticalityData.highlightColor}`}>
                    {service.criticalityData.icon && <span className="w-4 h-4 mr-1.5">{service.criticalityData.icon}</span>}
                    <span>{service.criticalityData.criticality}</span>
                  </span>
                )}
                
                {service.bridgeCommunication && (
                  <span className="inline-flex items-center px-3 py-1.5 rounded-full text-xs font-medium bg-blue-50 text-blue-700 border border-blue-200">
                    {/* Bridge icon placeholder */}
                    <svg className="w-3.5 h-3.5 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    Bridge {service.bridgeName}
                  </span>
                )}
                
                {service.springVersion && (
                  <span className="inline-flex items-center px-3 py-1.5 rounded-full text-xs font-medium bg-violet-50 text-violet-700 border border-violet-200">
                    {/* Spring icon placeholder */}
                    <svg className="w-3.5 h-3.5 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                    </svg>
                    Spring {service.springVersion}
                  </span>
                )}
              </div>
              
              {/* Description Section */}
              {service.description && (
                <div className={`p-4 rounded-xl border border-solid mb-4 ${service.criticalityData ? `border-${service.criticalityData.color.split(' ')[1]}` : 'border-neutral-200'} bg-neutral-50`}>
                  <p className="text-neutral-700 text-sm leading-relaxed">
                    {service.description}
                  </p>
                </div>
              )}
              
              {/* Environment Links Section */}
              <div className="mt-4">
                <h3 className="text-sm font-semibold text-neutral-500 mb-2">Environments</h3>
                <div className="grid grid-cols-2 gap-3">
                  {[
                    { key: 'urlDev', label: 'DEV', color: 'from-blue-50 to-blue-100', textColor: 'text-blue-700', bgColor: 'bg-blue-50', borderColor: 'border-blue-200', value: service.infrastructure?.urlDev },
                    { key: 'urlUat', label: 'HT', color: 'from-yellow-50 to-yellow-100', textColor: 'text-yellow-700', bgColor: 'bg-yellow-50', borderColor: 'border-yellow-200', value: service.infrastructure?.urlUat },
                    { key: 'urlHrf', label: 'HF', color: 'from-purple-50 to-purple-100', textColor: 'text-purple-700', bgColor: 'bg-purple-50', borderColor: 'border-purple-200', value: service.infrastructure?.urlHrf },
                    { key: 'urlProd', label: 'Prod', color: 'from-green-50 to-green-100', textColor: 'text-green-700', bgColor: 'bg-green-50', borderColor: 'border-green-200', value: service.infrastructure?.urlProd },
                  ].map((env) => {
                    const url = env.value;
                    if (!url) {
                      return null;
                    }

                    return (
                      <a
                        key={env.key}
                        href={`${url.replace(/\/$/, '')}/swagger-ui`}
                        target="_blank"
                        rel="noopener noreferrer"
                        className={`flex flex-col p-3 rounded-lg ${env.bgColor} ${env.textColor} border ${env.borderColor} hover:shadow-sm transition-shadow`}
                        title={url}
                        onClick={(e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => e.stopPropagation()}
                      >
                        <span className="font-semibold mb-1">{env.label}</span>
                        <span className="text-xs truncate opacity-80">{url}</span>
                      </a>
                    );
                  })}
                </div>
              </div>
            </div>
