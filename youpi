const [formData, setFormData] = useState({
    name: "",
    trigramme: "",
    description: "",
    bridgeCommunication: false,
    criticality: "Faible",
    poCoedev: "",
    techlead: "",
    java17Migrated: false,
    sonarized: false,
    sonarReportUrl: "",
    version: "",
    jfrogMigrated: false, // Nouveau
    githubUrl: "", // Nouveau
    developmentStatus: "inProgress", // Nouveau
    springVersion: "", // Nouveau
    servicesCountByTrigramme: 0, // Nouveau
    bridgeName: "", // Nouveau
    documentedBy: "", // Nouveau
    isDocumented: false, // Nouveau
    publishedOnSkies: false, // Nouveau
    deployedOnDev: false, // Nouveau
    migrationTestedOnDev: false, // Nouveau
    infrastructure: {
        urlInt: "",
        urlUat: "",
        urlOat: "",
        urlProd: ""
    },
    dataSources: {
        rabbitMQ: false,
        commonDB: false,
        dedicatedDB: false,
        s3: false
    },
    clientConsumers: [""],
    consumes: [""],
    consumedBy: [""],
    endpoints: [{
        method: "GET",
        path: "",
        curl: "",
        expectedResponse: "",
        description: ""
    }],
    databaseSchema: ""
});



-----------------
{/* Statut et Configuration */}
<div className="space-y-4">
    <h3 className="text-lg font-semibold text-neutral-800">Statut et Configuration</h3>
    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
            <label className="block text-sm font-medium text-neutral-700 mb-1">Statut de développement</label>
            <select
                name="developmentStatus"
                value={formData.developmentStatus}
                onChange={handleChange}
                className="w-full px-3 py-2 border border-neutral-300 rounded-lg"
            >
                <option value="inProgress">En cours</option>
                <option value="Production">Production</option>
            </select>
        </div>
        <div>
            <label className="block text-sm font-medium text-neutral-700 mb-1">Version Spring</label>
            <input
                type="text"
                name="springVersion"
                value={formData.springVersion}
                onChange={handleChange}
                className="w-full px-3 py-2 border border-neutral-300 rounded-lg"
                placeholder="ex: 3.2.0"
            />
        </div>
    </div>

    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
            <label className="block text-sm font-medium text-neutral-700 mb-1">URL GitHub</label>
            <input
                type="text"
                name="githubUrl"
                value={formData.githubUrl}
                onChange={handleChange}
                className="w-full px-3 py-2 border border-neutral-300 rounded-lg"
            />
        </div>
        <div>
            <label className="block text-sm font-medium text-neutral-700 mb-1">Nom du Bridge</label>
            <input
                type="text"
                name="bridgeName"
                value={formData.bridgeName}
                onChange={handleChange}
                className="w-full px-3 py-2 border border-neutral-300 rounded-lg"
            />
        </div>
    </div>
</div>

{/* État de la documentation et déploiement */}
<div className="space-y-4">
    <h3 className="text-lg font-semibold text-neutral-800">Documentation et Déploiement</h3>
    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div className="flex items-center">
            <input
                type="checkbox"
                id="isDocumented"
                name="isDocumented"
                checked={formData.isDocumented}
                onChange={(e) => setFormData({...formData, isDocumented: e.target.checked})}
                className="h-4 w-4 text-primary-600 focus:ring-primary-500 border-neutral-300 rounded"
            />
            <label htmlFor="isDocumented" className="ml-2 block text-sm text-neutral-700">Documentation complète</label>
        </div>
        <div>
            <label className="block text-sm font-medium text-neutral-700 mb-1">Documenté par</label>
            <input
                type="text"
                name="documentedBy"
                value={formData.documentedBy}
                onChange={handleChange}
                className="w-full px-3 py-2 border border-neutral-300 rounded-lg"
            />
        </div>
    </div>

    <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div className="flex items-center">
            <input
                type="checkbox"
                id="publishedOnSkies"
                name="publishedOnSkies"
                checked={formData.publishedOnSkies}
                onChange={(e) => setFormData({...formData, publishedOnSkies: e.target.checked})}
                className="h-4 w-4 text-primary-600 focus:ring-primary-500 border-neutral-300 rounded"
            />
            <label htmlFor="publishedOnSkies" className="ml-2 block text-sm text-neutral-700">Publié sur Skies</label>
        </div>
        <div className="flex items-center">
            <input
                type="checkbox"
                id="deployedOnDev"
                name="deployedOnDev"
                checked={formData.deployedOnDev}
                onChange={(e) => setFormData({...formData, deployedOnDev: e.target.checked})}
                className="h-4 w-4 text-primary-600 focus:ring-primary-500 border-neutral-300 rounded"
            />
            <label htmlFor="deployedOnDev" className="ml-2 block text-sm text-neutral-700">Déployé sur DEV</label>
        </div>
        <div className="flex items-center">
            <input
                type="checkbox"
                id="migrationTestedOnDev"
                name="migrationTestedOnDev"
                checked={formData.migrationTestedOnDev}
                onChange={(e) => setFormData({...formData, migrationTestedOnDev: e.target.checked})}
                className="h-4 w-4 text-primary-600 focus:ring-primary-500 border-neutral-300 rounded"
            />
            <label htmlFor="migrationTestedOnDev" className="ml-2 block text-sm text-neutral-700">Migration testée sur DEV</label>
        </div>
    </div>
</div>

{/* Migration et Qualité */}
<div className="space-y-4">
    <h3 className="text-lg font-semibold text-neutral-800">Migration et Qualité</h3>
    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div className="flex items-center">
            <input
                type="checkbox"
                id="jfrogMigrated"
                name="jfrogMigrated"
                checked={formData.jfrogMigrated}
                onChange={(e) => setFormData({...formData, jfrogMigrated: e.target.checked})}
                className="h-4 w-4 text-primary-600 focus:ring-primary-500 border-neutral-300 rounded"
            />
            <label htmlFor="jfrogMigrated" className="ml-2 block text-sm text-neutral-700">Migré vers JFrog</label>
        </div>
        <div>
            <label className="block text-sm font-medium text-neutral-700 mb-1">Nombre de services par trigramme</label>
            <input
                type="number"
                name="servicesCountByTrigramme"
                value={formData.servicesCountByTrigramme}
                onChange={handleChange}
                className="w-full px-3 py-2 border border-neutral-300 rounded-lg"
                min="0"
            />
        </div>
    </div>
</div>